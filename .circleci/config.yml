version: 2.1

parameters:
  vaporVersion:
    type: string
    default: "3.4.0"

orbs:
  win: circleci/windows@2.2.0

references:
  workspace_root: &workspace_root
    /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  check_out:
    docker:
      - image: sgpearse/vapor3-ubuntu18installer:latest

    steps:
      - checkout

  build_ubuntu18_installer:
    docker:
      - image: sgpearse/vapor3-ubuntu18:latest

    steps:
      - checkout

      - run:
          name: make installer
          command: |
            cd /root/project/build
            git branch --set-upstream-to=origin/weekly weekly
            git pull
            git checkout main
            git reset --hard origin/main
            cmake -DCMAKE_BUILD_TYPE:String=Release -DDIST_INSTALLER:string=ON ..
            make -j7
            make installer
            for f in VAPOR3-*.sh ; do mv "$f" "${f/Linux/Ubuntu18-Weekly}" ; done
            mkdir -p /tmp/workspace/installers
            mv *.sh /tmp/workspace/installers
      
      - store_artifacts:
          path: /tmp/workspace/installers

      - persist_to_workspace:
          root: *workspace_root
          paths: 
            - installers

  build_centos7_installer:
    docker:
      - image: sgpearse/vapor3-centos7:latest

    steps:
      - checkout

      - run:
          name: cmake3 and make
          command: |
            cd /root/project/build
            git branch --set-upstream-to=origin/weekly weekly
            git pull
            git checkout main
            git reset --hard origin/main
            cmake3 -DCMAKE_BUILD_TYPE:String=Release -DDIST_INSTALLER:string=ON ..
            make
            make installer
            for f in VAPOR3-*.sh ; do mv "$f" "${f/Linux/CentOS7-Weekly}" ; done
            mkdir -p /tmp/workspace/installers
            mv *.sh /tmp/workspace/installers

      - store_artifacts:
          path: /tmp/workspace/installers
      
      - persist_to_workspace:
          root: *workspace_root
          paths: 
            - installers
  build_osx_installer:
    macos:
      xcode: "13.2.0"
    steps:
      - run:
          name: Make VAPOR-Deps
          command: |
            sudo mkdir -p /usr/local/VAPOR-Deps
            sudo chmod -R 777 /usr/local/VAPOR-Deps
            sudo chown -R `whoami` /usr/local/VAPOR-Deps

      - restore_cache:
          keys:
            - clang12-{{ .Environment.CIRCLE_SHA1 }}
            - libomp-{{ .Environment.CIRCLE_SHA1 }}

      - checkout

      - run:
          name: Get third party libraries
          command: |
            pip3 install gdown
            sudo mkdir -p /usr/local/VAPOR-Deps
            sudo chmod 777 /usr/local/VAPOR-Deps
            cd /usr/local/VAPOR-Deps
            gdown https://drive.google.com/uc?id=1Q-IXlP_OgZSXsWKmT-smyrW9xnR-dUfg
            cd /usr/local/VAPOR-Deps
            tar xf 2019-Aug-Darwin.tar.xz -C /usr/local/VAPOR-Deps
            chmod -R 777 /usr/local/VAPOR-Deps

      - run:
          name: Get cmake
          command: |
            brew install cmake

      - run:
          name: Get MacPorts
          command: |
            curl -k -O https://distfiles.macports.org/MacPorts/MacPorts-2.7.1.tar.bz2
            tar xf MacPorts-2.7.1.tar.bz2
            cd MacPorts-2.7.1/
            ./configure
            make
            sudo make install

      - run:
          name: Get libomp
          command: |
            sudo /opt/local/bin/port selfupdate
            (sudo yes || true) | sudo /opt/local/bin/port install libomp

      - save_cache:
          key: libomp-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /opt/local

      - run:
          name: Get clang12
          command: |
            (sudo yes || true) | sudo /opt/local/bin/port install clang-12
            sudo /opt/local/bin/port select --set clang mp-clang-12

      - save_cache:
          key: clang12-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /opt/local

      - run:
          name: make VAPOR
          command: |
            cp site_files/site.NCAR site.local
            mkdir build
            cd build
            git branch --set-upstream-to=origin/main main
            git checkout main
            git reset --hard origin/main
            export PATH=/opt/local/bin:$PATH
            sudo port select --set clang mp-clang-12
            cmake -DCPACK_BINARY_DRAGNDROP=ON -DCMAKE_BUILD_TYPE:String=Release -DDIST_INSTALLER:string=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DUSE_OMP
            make
            make installer
            for f in VAPOR3-*.dmg ; do mv "$f" "${f/Darwin/Darwin-Weekly}" ; done
            mkdir -p /tmp/workspace/installers
            mv *.dmg /tmp/workspace/installers
          no_output_timeout: 30m

      - store_artifacts:
          path: /tmp/workspace/installers
      
      - persist_to_workspace:
          root: *workspace_root
          paths: 
            - installers

  build_win10_installer:
    executor: win/default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            #choco install visualcpp-build-tools -version 14.0.25420.1 -y
            choco install visualstudio2019-workload-vctools -y
            choco install python -y
            choco install git -y
            choco install cmake -y
            choco install nsis -y
            python -m pip install gdown
            #setx /M PATH "%PATH%;C:\Program Files (x86)\MSBuild\14.0\bin" 
            setx /M PATH "%PATH%;C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin" 
            msbuild -version
            pwd
            ls
            python .circleci/downloadWin3rdParty.py
      - run:
          name: Reset branch
          command: |
            git checkout main
            git pull --no-commit 
            git commit --allow-empty -m "Merge"
            git reset --hard origin/main
          shell: bash.exe
      - run:
          name: dos2unix
          command: |
            dos2unix /c/Users/circleci/project/share/shaders/*
            dos2unix /c/Users/circleci/project/share/shaders/main
            dos2unix /c/Users/circleci/project/share/shaders/includes
          shell: bash.exe 
      - run:
          name: Build Vapor
          command: |
            Copy-Item site_files\* -Destination .
            mkdir build
            cd build
            & 'C:\\Program Files\\CMake\\bin\\cmake.exe' -S C:\Users\circleci\project -B C:\Users\circleci\project\build -DDIST_INSTALLER:string=ON -DCMAKE_BUILD_TYPE:STRING=Release -G 'Visual Studio 16 2019' -A x64
            msbuild C:\Users\circleci\project\build\PACKAGE.vcxproj /p:Configuration=Release /p:Platform=x64
            mkdir -p C:\Users\circleci\project\tmp\workspace\installers
            Copy-Item C:\Users\circleci\project\build\*.exe -Destination C:\Users\circleci\project\tmp\workspace\installers
          no_output_timeout: 45m

      - store_artifacts:
          path: C:\Users\circleci\project\tmp\workspace\installers

      - persist_to_workspace:
          root: *workspace_root
          paths: 
            - installers

  release_weekly_installers:
    macos:
      xcode: "12.4.0"
    steps:
      - checkout
      - run:
          name: get main
          command: |
            git checkout main
            git pull --no-commit && git commit --allow-empty -m "Merge"
            git reset --hard origin/main
      - *attach_workspace
      - run:
          name: publish release
          command: |
            cd /Users/distiller/project
            hash=`git rev-parse HEAD`
            tag="Weekly"
            cd /tmp/workspace/installers
            brew install ghr
            endl=$'\n'
            title="sha 256"$endl
            a="Ubuntu18:  "
            sha=`shasum -a 256 VAPOR3*Ubuntu*`
            ubuntuSha=$a$sha$endl
            os="CentOS:    "
            sha=`shasum -a 256 VAPOR3*CentOS7*`
            centosSha=$os$sha$endl
            #os="OSX:       "
            #sha=`shasum -a 256 VAPOR3*Darwin*`
            #osxSha=$os$sha$endl
            #os="Windows:   "
            #sha=`shasum -a 256 VAPOR3*win64*`
            #winSha=$os$sha$endl
            shaMessage="$title$ubuntuSha$centosSha$osxSha$winSha"
            date=`date +"%d_%m_%y"`
            echo $shaMessage > "/tmp/workspace/installers/sha256.txt"
            echo ghr -b "Weely installers are untested an may not be stable.  Built with commit ${hash} on ${date} \(DD-MM-YY\)" -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -prerelease -c ${CIRCLE_SHA1} -recreate -c ${hash} -n ${tag} ${tag} /tmp/workspace/installers
            ghr -b "Weely installers are untested an may not be stable.  Built with commit ${hash} on ${date} \(DD-MM-YY\)" -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -prerelease -c ${CIRCLE_SHA1} -recreate -c ${hash} -n ${tag} ${tag} /tmp/workspace/installers


workflows:
  version: 2
  weekly:
    triggers:
      - schedule:
           #cron: "0 20 * * 2" # Tuesday @ 20:00 UTC (Mountain Standard Time +6)
           cron: "45 0 * * 4"
           filters:
             branches:
               only: weekly
    jobs:
      - build_ubuntu18_installer
      - build_centos7_installer
      - build_osx_installer
      - build_win10_installer
      - release_weekly_installers:
          requires:
            - build_ubuntu18_installer
            - build_centos7_installer
            - build_osx_installer
            - build_win10_installer
